apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion androidCompileSdkVersion
    defaultConfig {
        applicationId "ba.ahavic.exchangeme"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            buildConfigField "String", "clientId", "\"1a\""
            buildConfigField "String", "clientSecret", "\"1a\""
            buildConfigField "String", "baseUrl", "\"1a\""
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensionsVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Networking
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$ktxCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$ktxCoroutinesVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$ktxCoroutinesAdapterVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$ktxCoroutinesVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitExtensionsVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
}
